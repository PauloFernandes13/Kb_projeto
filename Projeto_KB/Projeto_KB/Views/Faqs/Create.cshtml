@model Projeto_KB.Models.Faq

@{
    ViewBag.Title = "Create";
}
<link href="~/Content/StyleDescription.css" rel="stylesheet" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <h3 class="new">New Faq</h3>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-inline">
        <div class="form-group form-group-sm">
            @Html.LabelFor(model => model.SubjectID, "SubjectID", htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.DropDownList("SubjectID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group form-group-sm">
            @Html.LabelFor(model => model.TopicID, "TopicID", htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.DropDownList("TopicID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TopicID, "", new { @class = "text-danger" })
            </div>
        </div>


    </div>
    <hr />
    <div class="form-horizontal">
        <div class="form-group form-group-sm">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group form-group-sm">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class ="ckeditor" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group form-group-sm">
            @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group form-group-sm">
            @Html.LabelFor(model => model.UrlFaq, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UrlFaq, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UrlFaq, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group form-group-sm">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-info btn-xs" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Faq List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
